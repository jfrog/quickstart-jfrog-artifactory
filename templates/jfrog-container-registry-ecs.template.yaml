AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploys the ECS Container Registry Service and Task"
Parameters:
  EcsCluster:
    Type: String
  ServiceName:
    Type: String
  JcrTargetGroupArn:
    Type: String
  MasterKey:
    Type: String
    NoEcho: 'true'
  ExtraJavaOptions:
    Type: String
  NumberNodes:
    Type: Number
  DbUrl:
    Type: String
  DbDriver:
    Type: String
  DbPluginUrl:
    Type: String
  DbPlugin:
    Type: String
  ProDockerRepoUrl:
    Type: String
  NginxDockerRepoUrl:
    Type: String
  DbType:
    Type: String
  DatabaseUser:
    Type: String
  DatabasePassword:
    Type: String
    NoEcho: 'true'
  EcsRoleArn:
    Type: String
  EcsLogGroup:
    Type: String
  YQVersion:
    Default: "3.0.1"
    Type: String
  QsS3BucketName:
    Type: String
  QsS3KeyPrefix:
    Type: String

Resources:
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      ServiceName: !Ref ServiceName
      LaunchType: EC2
      DesiredCount: !Ref NumberNodes
      LoadBalancers:
        - ContainerName: nginx
          ContainerPort: 443
          TargetGroupArn: !Ref JcrTargetGroupArn
      TaskDefinition:
        Ref: JcrTaskDefinition
      HealthCheckGracePeriodSeconds: 300

  JcrTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: "2048"
      Family: !Sub ${ServiceName}-Task
      Memory: "4096"
      NetworkMode: bridge
      RequiresCompatibilities:
        - EC2
      ExecutionRoleArn: !Ref EcsRoleArn
      Volumes:
        - Name: etc
          Host:
            SourcePath: /data/jfrog/artifactory/etc/
        - Name: temp-plugins
          Host:
            SourcePath: /data/jfrog/artifactory/tmp/plugins
        - Name: java-certs
          Host:
            SourcePath: /data/jfrog/artifactory/java_certs
        - Name: nginx
          Host:
            SourcePath: /data/jfrog/nginx
      ContainerDefinitions:
        - Name: jcr
          EntryPoint:
            - /bin/bash
            - "-c"
          Command:
            - !Sub |
                wget https://${QsS3BucketName}.s3.amazonaws.com/${QsS3KeyPrefix}scripts/configure_ecs_container.sh -O /tmp/source;
                echo '' >> /tmp/source;
                echo export HA_HOST_IP=`wget -q -O - http://169.254.169.254/latest/meta-data/local-ipv4` >> /tmp/source;
                echo wget -O /var/opt/jfrog/artifactory/bootstrap/artifactory/tomcat/lib/${DbPlugin} ${DbPluginUrl} >> /tmp/source;
                echo /entrypoint-artifactory.sh >> /tmp/source;
                chmod +x /tmp/source;
                /tmp/source
          Image: !Sub ${ProDockerRepoUrl}
          PortMappings:
            - ContainerPort: 8081
              HostPort: 8081
              Protocol: tcp
            - ContainerPort: 8082
              HostPort: 8082
              Protocol: tcp
          MountPoints:
            - ContainerPath: /artifactory_extra_conf
              ReadOnly: False
              SourceVolume: etc
            - ContainerPath: /tmp/plugins
              ReadOnly: False
              SourceVolume: temp-plugins
            - ContainerPath: /artifactory_extra_certs
              ReadOnly: False
              SourceVolume: java-certs
          Ulimits:
            - Name: nproc
              SoftLimit: 65535
              HardLimit: 65535
            - Name: nofile
              SoftLimit: 32000
              HardLimit: 40000
          HealthCheck:
            Command:
              - CMD-SHELL
              - (printf 'GET /artifactory/api/system/ping HTTP/1.0\r\n\r\n'; sleep 1) | nc 127.0.0.1 8081 | grep OK || exit 1
            Interval: 5
            Retries: 3
            StartPeriod: 60
            Timeout: 10
          Environment:
            - Name: HA_IS_PRIMARY
              Value: "True"
            - Name: HA_ENABLED
              Value: "False"
            - Name: EXTRA_JAVA_OPTIONS
              Value: !Ref ExtraJavaOptions
            - Name: ARTIFACTORY_MASTER_KEY
              Value: !Ref MasterKey
            - Name: DB_URL
              Value: !Ref DbUrl
            - Name: DB_TYPE
              Value: !Ref DbType
            - Name: DB_USER
              Value: !Ref DatabaseUser
            - Name: DB_PASSWORD
              Value: !Ref DatabasePassword
            - Name: DB_DRIVER
              Value: !Ref DbDriver
            - Name: YQ_VERSION
              Value: !Ref YQVersion
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref EcsLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: jcr
        - Name: nginx
          Image: !Sub ${NginxDockerRepoUrl}
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
            - ContainerPort: 443
              HostPort: 443
              Protocol: tcp
          Essential: false
          DependsOn:
            - Condition: HEALTHY
              ContainerName: jcr
          Links:
            - jcr:jcr
          MountPoints:
            - ContainerPath: /var/opt/jfrog/nginx
              ReadOnly: False
              SourceVolume: nginx
          Ulimits:
            - Name: nproc
              SoftLimit: 65535
              HardLimit: 65535
            - Name: nofile
              SoftLimit: 32000
              HardLimit: 40000
          Environment:
            - Name: ART_BASE_URL
              Value: http://jcr:8081/artifactory
            - Name: SSL
              Value: "true"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: EcsLogGroup
              awslogs-region:
                Ref: AWS::Region
              awslogs-stream-prefix: nginx
